services:
    trino:
        image: trinodb/trino
        container_name: trino
        networks:
            patch-network:
        ports:
            - 8282:8080
        depends_on:
            - rest
            - minio
        volumes:
            - ./trino/iceberg.properties:/etc/trino/catalog/iceberg.properties
            - ./trino/test-schema.sql:/home/trino/test-schema.sql
        environment:
            - AWS_ACCESS_KEY_ID=patch_admin
            - AWS_SECRET_ACCESS_KEY=patch_password
            - AWS_REGION=us-east-1


    rest:
        depends_on:
            postgres:
                condition: service_healthy
        image: tabulario/iceberg-rest
        # image: apache/iceberg-rest-fixture
        container_name: iceberg-rest
        networks:
            patch-network:
        ports:
            - 8181:8181
        environment:
            - AWS_ACCESS_KEY_ID=patch_admin
            - AWS_SECRET_ACCESS_KEY=patch_password
            - AWS_REGION=us-east-1
            - CATALOG_WAREHOUSE=s3://warehouse/
            - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
            - CATALOG_S3_ENDPOINT=http://minio:9000
            - CATALOG_URI=jdbc:postgresql://postgres/demo_catalog
            - CATALOG_JDBC_USER=admin
            - CATALOG_JDBC_PASSWORD=password

    postgres:
        image: postgres:13
        container_name: postgres
        environment:
            - PGDATA=/var/lib/postgresql/data
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=demo_catalog
            - POSTGRES_HOST_AUTH_METHOD=md5
        networks:
            patch-network:
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin -d demo_catalog"]
            interval: 5s
            timeout: 5s
            retries: 5

    minio:
        image: minio/minio
        container_name: minio
        environment:
            - MINIO_ROOT_USER=patch_admin
            - MINIO_ROOT_PASSWORD=patch_password
            - MINIO_DOMAIN=minio
        networks:
            patch-network:
                    aliases:
                        - warehouse.minio
        volumes:
            - minio_data:/data
        ports:
            - 9001:9001
            - 9000:9000
        command: ["server", "/data", "--console-address", ":9001"]

    mc:
        depends_on:
            - minio
        image: minio/mc
        container_name: mc
        networks:
            patch-network:
        environment:
            - AWS_ACCESS_KEY_ID=patch_admin
            - AWS_SECRET_ACCESS_KEY=patch_password
            - AWS_REGION=us-east-1
        entrypoint: >
            /bin/sh -c "
                until (/usr/bin/mc config host add minio http://minio:9000 patch_admin patch_password) do echo '...waiting...' && sleep 1; done;
                /usr/bin/mc rm -r --force minio/warehouse;
                /usr/bin/mc mb minio/warehouse;
                /usr/bin/mc policy set public minio/warehouse;
                tail -f /dev/null
            "

networks:
    patch-network:

volumes:
    postgres_data:
    minio_data:
